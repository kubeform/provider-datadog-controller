/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Gcp struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GcpSpec   `json:"spec,omitempty"`
	Status            GcpStatus `json:"status,omitempty"`
}

type GcpSpec struct {
	State *GcpSpecResource `json:"state,omitempty" tf:"-"`

	Resource GcpSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`
}

type GcpSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Silence monitors for expected GCE instance shutdowns.
	// +optional
	Automute *bool `json:"automute,omitempty" tf:"automute"`
	// Your email found in your JSON service account key.
	ClientEmail *string `json:"clientEmail" tf:"client_email"`
	// Your ID found in your JSON service account key.
	ClientID *string `json:"clientID" tf:"client_id"`
	// Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.
	// +optional
	HostFilters *string `json:"hostFilters,omitempty" tf:"host_filters"`
	// Your private key name found in your JSON service account key.
	PrivateKey *string `json:"-" sensitive:"true" tf:"private_key"`
	// Your private key ID found in your JSON service account key.
	PrivateKeyID *string `json:"privateKeyID" tf:"private_key_id"`
	// Your Google Cloud project ID found in your JSON service account key.
	ProjectID *string `json:"projectID" tf:"project_id"`
}

type GcpStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// GcpList is a list of Gcps
type GcpList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Gcp CRD objects
	Items []Gcp `json:"items,omitempty"`
}
