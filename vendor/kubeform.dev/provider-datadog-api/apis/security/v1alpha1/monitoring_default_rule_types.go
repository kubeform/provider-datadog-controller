/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MonitoringDefaultRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MonitoringDefaultRuleSpec   `json:"spec,omitempty"`
	Status            MonitoringDefaultRuleStatus `json:"status,omitempty"`
}

type MonitoringDefaultRuleSpecCase struct {
	// Notification targets for each rule case.
	Notifications []string `json:"notifications" tf:"notifications"`
	// Status of the rule case to match.
	Status *string `json:"status" tf:"status"`
}

type MonitoringDefaultRuleSpecFilter struct {
	// The type of filtering action. Allowed enum values: require, suppress
	Action *string `json:"action" tf:"action"`
	// Query for selecting logs to apply the filtering action.
	Query *string `json:"query" tf:"query"`
}

type MonitoringDefaultRuleSpec struct {
	State *MonitoringDefaultRuleSpecResource `json:"state,omitempty" tf:"-"`

	Resource MonitoringDefaultRuleSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type MonitoringDefaultRuleSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Cases of the rule, this is used to update notifications.
	// +optional
	// +kubebuilder:validation:MaxItems=5
	Case []MonitoringDefaultRuleSpecCase `json:"case,omitempty" tf:"case"`
	// Enable the rule.
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// Additional queries to filter matched events before they are processed.
	// +optional
	Filter []MonitoringDefaultRuleSpecFilter `json:"filter,omitempty" tf:"filter"`
}

type MonitoringDefaultRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MonitoringDefaultRuleList is a list of MonitoringDefaultRules
type MonitoringDefaultRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MonitoringDefaultRule CRD objects
	Items []MonitoringDefaultRule `json:"items,omitempty"`
}
