/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MonitoringFilter struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MonitoringFilterSpec   `json:"spec,omitempty"`
	Status            MonitoringFilterStatus `json:"status,omitempty"`
}

type MonitoringFilterSpecExclusionFilter struct {
	// Exclusion filter name.
	Name *string `json:"name" tf:"name"`
	// Exclusion filter query. Logs that match this query are excluded from the security filter.
	Query *string `json:"query" tf:"query"`
}

type MonitoringFilterSpec struct {
	State *MonitoringFilterSpecResource `json:"state,omitempty" tf:"-"`

	Resource MonitoringFilterSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type MonitoringFilterSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Exclusion filters to exclude some logs from the security filter.
	// +optional
	ExclusionFilter []MonitoringFilterSpecExclusionFilter `json:"exclusionFilter,omitempty" tf:"exclusion_filter"`
	// The filtered data type.
	// +optional
	FilteredDataType *string `json:"filteredDataType,omitempty" tf:"filtered_data_type"`
	// Whether the security filter is enabled.
	IsEnabled *bool `json:"isEnabled" tf:"is_enabled"`
	// The name of the security filter.
	Name *string `json:"name" tf:"name"`
	// The query of the security filter.
	Query *string `json:"query" tf:"query"`
	// The version of the security filter.
	// +optional
	Version *int64 `json:"version,omitempty" tf:"version"`
}

type MonitoringFilterStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MonitoringFilterList is a list of MonitoringFilters
type MonitoringFilterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MonitoringFilter CRD objects
	Items []MonitoringFilter `json:"items,omitempty"`
}
