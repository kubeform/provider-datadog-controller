/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Index struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IndexSpec   `json:"spec,omitempty"`
	Status            IndexStatus `json:"status,omitempty"`
}

type IndexSpecExclusionFilterFilter struct {
	// Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.
	// +optional
	Query *string `json:"query,omitempty" tf:"query"`
	// The fraction of logs excluded by the exclusion filter, when active.
	// +optional
	SampleRate *float64 `json:"sampleRate,omitempty" tf:"sample_rate"`
}

type IndexSpecExclusionFilter struct {
	// +optional
	Filter []IndexSpecExclusionFilterFilter `json:"filter,omitempty" tf:"filter"`
	// A boolean stating if the exclusion is active or not.
	// +optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled"`
	// The name of the exclusion filter.
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
}

type IndexSpecFilter struct {
	// Logs filter criteria. Only logs matching this filter criteria are considered for this index.
	Query *string `json:"query" tf:"query"`
}

type IndexSpec struct {
	State *IndexSpecResource `json:"state,omitempty" tf:"-"`

	Resource IndexSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type IndexSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The number of log events you can send in this index per day before you are rate-limited.
	// +optional
	DailyLimit *int64 `json:"dailyLimit,omitempty" tf:"daily_limit"`
	// If true, sets the daily_limit value to null and the index is not limited on a daily basis (any specified daily_limit value in the request is ignored). If false or omitted, the index's current daily_limit is maintained.
	// +optional
	DisableDailyLimit *bool `json:"disableDailyLimit,omitempty" tf:"disable_daily_limit"`
	// List of exclusion filters.
	// +optional
	ExclusionFilter []IndexSpecExclusionFilter `json:"exclusionFilter,omitempty" tf:"exclusion_filter"`
	// Logs filter
	Filter []IndexSpecFilter `json:"filter" tf:"filter"`
	// The name of the index.
	Name *string `json:"name" tf:"name"`
	// The number of days before logs are deleted from this index.
	// +optional
	RetentionDays *int64 `json:"retentionDays,omitempty" tf:"retention_days"`
}

type IndexStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// IndexList is a list of Indexs
type IndexList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Index CRD objects
	Items []Index `json:"items,omitempty"`
}
